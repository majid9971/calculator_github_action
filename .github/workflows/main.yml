name: Build and SonarCloud Analysis Workflow

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarqube:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for Sonar analysis

      # Step 2: Set up JDK 11
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: temurin

      # Step 3: Install Maven
      - name: Install Maven
        run: |
          sudo apt-get update
          sudo apt-get install -y maven

      # Step 4: Run Maven Build
      - name: Build Project
        run: |
          mvn clean verify

      # Step 5: SonarCloud Scan
      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v4
        with:
          args: >
            -Dsonar.projectKey=majid9971_latest-java
            -Dsonar.projectName=latest_java
            -Dsonar.projectVersion=1.8
            -Dsonar.sources=.
            -Dsonar.java.binaries=target/classes
            -Dsonar.jacoco.reportPaths=target/jacoco.exec
            -Dsonar.pdf.issue.details=BUG,CODE_SMELL,VULNERABILITY
            -Dsonar.pdf.other.metrics=uncovered_lines
            -Dsonar.pdf.skip=false
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.organization=majid9971
            -Dsonar.branch.name=main 
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
   # Step 6: Install JFrog CLI
      - name: Install JFrog CLI
        run: |
          curl -fL https://getcli.jfrog.io | sh
          chmod +x jfrog
          sudo mv jfrog /usr/local/bin/

      # Step 7: Configure JFrog CLI
      - name: Configure JFrog CLI
        env:
          JFROG_URL: ${{ secrets.JFROG_URL }} # Set this secret in GitHub
          JFROG_USERNAME: ${{ secrets.JFROG_USERNAME }} # Set this secret in GitHub
          JFROG_PASSWORD: ${{ secrets.JFROG_PASSWORD }} # Set this secret in GitHub
        run: |
          jfrog rt config --url $JFROG_URL --user $JFROG_USERNAME --password $JFROG_PASSWORD

      # Step 8: Upload Build Artifacts to JFrog
      - name: Upload Build Artifacts to JFrog
        run: |
          jfrog rt u "target/*.jar" "repository-name/path/in/artifactory/"
 
