name: Build and SonarQube Analysis Workflow

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  # Job 1: Build and SonarQube Analysis
  sonarqube:
    name: SonarQube Analysis
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for Sonar analysis

      # Step 2: Set up JDK 11
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: temurin

      # Step 3: Install Maven
      - name: Install Maven
        run: |
          sudo apt-get update
          sudo apt-get install -y maven

      # Step 4: Run Maven Build
      - name: Build Project
        run: |
          mvn clean verify

      # Step 5: Run SonarQube Analysis
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_HOST_URL: http://127.0.0.1:9000
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=latest_java:master
            -Dsonar.projectName=latest_java
            -Dsonar.projectVersion=1.8
            -Dsonar.sources=.
            -Dsonar.java.binaries=target/classes
            -Dsonar.jacoco.reportPaths=target/jacoco.exec
            -Dsonar.pdf.issue.details=BUG,CODE_SMELL,VULNERABILITY
            -Dsonar.pdf.other.metrics=uncovered_lines
            -Dsonar.pdf.skip=false

  # Job 2: Notify Slack (always runs, regardless of Job 1 result)
  notify:
    name: Notify Slack
    runs-on: ubuntu-latest
    needs: sonarqube
    if: always()  # Always run the notification job

    steps:
      - name: Send Notification to Slack
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text": "SonarQube analysis completed with status: ${{ needs.sonarqube.result }}."}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}
